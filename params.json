{"name":"Game Solver","tagline":"A Java program that takes in an N-player strategic form game in Gambit format and solves the game","body":"Game Solver\r\n==========\r\n\r\nGame Solver is a Java program that takes in an N-player strategic form game in _Gambit_ format and solves the game.\r\n\r\nThe program finds:\r\n* All strongly dominant strategies\r\n* All weakly dominant strategies\r\n* All very weakly dominant strategies\r\n* All pure strategy Nash equilibria\r\n\r\nPoints to note\r\n==============\r\n\r\n* Strongly dominant, weakly dominant and very weakly dominant strategy equilibrium can be printed, but I haven't done that.\r\n* Computation of the pure strategy Nash equilibria will take quite some time, since I've used a brute-force approach. However, the strongly, weakly and very weakly dominant strategies don't take much time, and if you are interested only in them, please comment out the `findNashEquilibria()` function inside `main()` and the code that follows to print them.\r\n   \r\nComments on the input format\r\n============================\r\n\r\n* My code follows the _Gambit_ format. The input file needs to be a _.nfg_ file with the pay-off values listed in it.\r\n* I assume that all the pay-off values are written in one line in the file (This is important). So if you plan on using my code, please remember that your input file needs to have exactly 4 lines, as in the sample file _random.nfg_.\r\n* Please pass the input file _random.nfg_ or your input game file in the same format as a command-line argument to the program.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}